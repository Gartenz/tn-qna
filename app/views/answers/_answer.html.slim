- if answer.persisted?
  = content_tag :div, data:{answer_id: answer.id}, class: "border mt-2 mb-2 #{"best-answer" if answer.best}"
    = content_tag :span, class: "answer-rating-#{answer.id}"
      =content_tag :span, class: "answer-score-#{answer.id} badge badge-secondary"
        = answer.score
      = render 'shared/vote', resource: answer
    .
      = answer.body
      - if answer.files.attached?
        = content_tag :div, class: "answer-#{answer.id}-files"
          table
            = render partial: 'shared/file', collection: answer.files
      p Links:
      ul
        - answer.links.each do |link|
          li
            = link_to link.name, link.url
          - if is_gist?(link)
            .card-group
              - get_gist_files(link).each do |file|
                .card.bg-light
                  .card-header
                    = file[1].filename
                  .card-body
                    = file[1].content
    .answer-actions
      - if can? :destroy, answer
        = link_to 'Delete answer', answer_path(answer), remote: true, method: :delete, class: 'btn btn-danger'
      - if can? :update, answer
        = link_to 'Edit', '#', class: 'btn btn-primary edit-answer-link', data: { answer_id: answer.id}
      - if can? :best, answer
        = link_to 'Best', best_answer_path(answer), remote: true, class: 'btn btn-success', method: :patch
    .hidden id="edit-answer-#{answer.id}"
      = form_with model: answer do |f|
        .form-group
          = f.label :body
          = f.text_area :body, class: 'form-control'
        .form-group
          = f.label :files
          = f.file_field :files, multiple: true, direct_upload: true
        .form-group
          p Links:
          = f.fields_for :links do |l|
            = render 'shared/links_fields', f: l
          .links
            = link_to_add_association 'add link', f, :links, partial: 'shared/links_fields'
        = f.submit 'Update', class: 'btn btn-primary'
    p
      | Comments:
    . id="answer-#{answer.id}-comments"
      = render answer.comments, resource: answer
    .new-comment
      - if current_user
        p
          | New comment:
        = render partial: 'comments/form', locals: { resource: answer }

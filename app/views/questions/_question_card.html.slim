.card
  .card-body
    .question-body
      h5.question-rating
        | Rating: 
        span.question-score
          = question.score
        - if signed_in? && !current_user&.author_of?(question)
          = link_to "Vote up", vote_up_question_path(question), method: :patch, remote: true, data: { type: :json }
          = link_to "Vote down", vote_down_question_path(question), method: :patch, remote: true, data: { type: :json }
          = link_to "Cancel vote", cancel_vote_question_path(question), method: :patch, remote: true, data: { type: :json }
      h5= question.title
      p= question.body
      - if question.files.attached?
        .question-files
          table
            = render partial: 'shared/file', collection: question.files
      .question-links
        p Links:
        ul
          - question.links.each do |link|
            li= link_to link.name, link.url
            - if is_gist(link)
              .card-group
                - get_gist_files(link).each do |file|
                  .card.bg-light
                    .card-header
                      = file[1].filename
                    .card-body
                      = file[1].content
      - if current_user&.author_of?(question)
        = link_to 'Delete', question_path(question), class: 'btn btn-danger', method: :delete
        = link_to 'Edit', '#', class: 'btn btn-primary edit-question-link'
    .question-form.hidden
      = render 'form'
